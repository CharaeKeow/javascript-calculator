{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Buttons","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","id","onClick","this","props","clearDisplay","value","handleOperator","handleInput","handleCalculation","React","Component","Display","displayInput","App","_this","Object","_home_charae_javascript_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_charae_javascript_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_charae_javascript_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","input","hasAnswer","hasDecimal","hasOperator","hasMinus","bind","_home_charae_javascript_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__","infixToPostFix","parsePostFix","updateState","e","setState","target","_this$setState","_home_charae_javascript_calculator_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","length","slice","result","i","splice","isNaN","parseFloat","isFinite","equation","arr","console","log","outputQueue","operatorStack","associativity","^","*","/","+","-","precedence","indexOf","temp","push","join","split","filter","item","token","checkNumber","operator1","operator2","pop","reverse","operand1","operand2","undefined","eval","postfix","href","rel","keyDown","handleKeyDown","react_fcctest__WEBPACK_IMPORTED_MODULE_9___default","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_10__","icon","faHeart","class","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca81970b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ReactFCCTest from 'react-fcctest';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart} from '@fortawesome/free-solid-svg-icons';\n\nclass Buttons extends React.Component {\n  \n  render() {\n    return(\n      <div className=\"btn-container\">\n        <div className=\"row-1 row\">\n          <button className=\"btn-clear\" id=\"clear\" onClick={this.props.clearDisplay}>AC</button>\n          <button className=\"btn-operator\" id=\"multiply\" value=\"*\" onClick={this.props.handleOperator}>x</button>\n          <button className=\"btn-operator\" id=\"divide\" value=\"/\" onClick={this.props.handleOperator}>/</button>\n        </div>\n        <div className=\"row-2 row\">\n          <button className=\"btn-num\" id=\"seven\" value=\"7\" onClick={this.props.handleInput}>7</button>\n          <button className=\"btn-num\" id=\"eight\" value=\"8\" onClick={this.props.handleInput}>8</button>\n          <button className=\"btn-num\" id=\"nine\" value=\"9\" onClick={this.props.handleInput}>9</button>\n          <button className=\"btn-operator\" id=\"subtract\" value=\"-\" onClick={this.props.handleOperator}>-</button>\n        </div>\n        <div className=\"row-3 row\">\n          <button className=\"btn-num\" id=\"four\" value=\"4\" onClick={this.props.handleInput}>4</button>\n          <button className=\"btn-num\" id=\"five\" value=\"5\" onClick={this.props.handleInput}>5</button>\n          <button className=\"btn-num\" id=\"six\" value=\"6\" onClick={this.props.handleInput}>6</button>\n          <button className=\"btn-operator\" id=\"add\" value=\"+\" onClick={this.props.handleOperator}>+</button>\n        </div>\n        <div className=\"row-4 row\">          \n          <button className=\"btn-num\" id=\"one\" value=\"1\" onClick={this.props.handleInput}>1</button>\n          <button className=\"btn-num\" id=\"two\" value=\"2\" onClick={this.props.handleInput}>2</button>\n          <button className=\"btn-num\" id=\"three\" value=\"3\" onClick={this.props.handleInput}>3</button>          \n          <button className=\"btn-equal\" id=\"equals\" value=\"=\" onClick={this.props.handleCalculation}>=</button>\n        </div>\n        <div className=\"row-5 row\">\n          <button className=\"btn-num\" id=\"zero\" value=\"0\" onClick={this.props.handleInput}>0</button>\n          <button className=\"btn-num\" id=\"decimal\" value=\".\" onClick={this.props.handleInput}>.</button>          \n        </div>       \n      </div>\n    );    \n  }\n}\n\nclass Display extends React.Component {\n  render() {\n    return (\n      <div className=\"display\">        \n        <p id=\"display\" className=\"display-input\">{this.props.displayInput}</p>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      hasAnswer: 0,\n      hasDecimal: 0,\n      hasOperator: 0,\n      hasMinus:  0,\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n    this.handleCalculation = this.handleCalculation.bind(this);\n    this.infixToPostFix = this.infixToPostFix.bind(this);\n    this.parsePostFix = this.parsePostFix.bind(this);        \n    this.updateState = this.updateState.bind(this);\n  }\n\n  updateState(e) {\n    if (this.state.hasAnswer) {\n      this.setState({\n        input: this.state.input + e.target.value,\n        \n      });\n    }\n\n    if (this.state.hasOperator) {\n      this.setState({\n        input: this.state.input + e.target.value,\n        hasOperator: 0,\n        \n      });\n    } else {\n      if (this.state.input === \"0\" && e.target.value === \"0\") {\n        this.setState({\n          input: \"0\",\n          \n        });      \n      } else if (this.state.input === \"0\" && e.target.value > \"0\") {\n        this.setState({\n          input: e.target.value,\n          \n        })\n      } else if (e.target.value >= \"0\") {      \n        this.setState({\n          input: this.state.input + e.target.value,\n          \n        });      \n      } else if (e.target.value === \".\" && !this.state.hasDecimal) {      \n        this.setState({\n          input: this.state.input + e.target.value,\n          hasDecimal: 1,\n          \n        });      \n      } \n    }\n  }\n\n  handleOperator(e) {\n    if (this.state.hasAnswer) {\n      this.setState({\n        input: this.state.input + e.target.value,\n        hasAnswer: 0   \n      });\n    }\n\n    if (!this.state.hasOperator) {     \n      this.setState({\n        input: this.state.input + e.target.value,\n        hasOperator: 1,\n        hasDecimal: 0\n      });}\n     else if (this.state.hasOperator && e.target.value === \"-\") {\n      this.setState({\n        hasOperator: 0,\n        hasMinus: 1,\n        input: this.state.input + e.target.value,\n        hasOperator: 1,\n        hasDecimal: 0\n      })        \n    } else if (this.state.hasOperator && e.target.value === this.state.input[this.state.input.length - 1]) {\n      this.setState({\n        hasOperator: 1,\n        input: this.state.input\n      })\n    } else if (this.state.hasOperator && e.target.value !== \"-\") {\n      this.setState({\n        hasOperator: 1,\n        input: this.state.input.slice(0, this.state.input.length - 2) + e.target.value\n      })\n    } else {\n      this.setState({\n        input: this.state.input.slice(0, this.state.input.length - 1) + e.target.value,\n        hasOperator: 1,\n        hasDecimal: 0\n      })\n    }      \n  }\n\n  //Handle inpue - i.e. append it to input state\n  handleInput(e) {\n    if (!this.state.hasAnswer) {\n     this.updateState(e);\n    } else {\n      if (e.target.value >= \"0\") {\n        this.setState({\n          input: e.target.value,\n          \n        });       \n      } else if (e.target.value === \".\") {\n        this.setState({\n          input: this.state.result + e.target.value,\n          \n        });\n      } else {\n        this.setState({\n          input: this.state.result + \" \" + e.target.value + \" \",\n          \n        });\n      }\n    } \n  }  \n\n  //Remove empty string in the array\n  clean(e) {\n    for (let i = 0; i < e.length; i++) {\n      if (e[i] === \"\") {\n        e.splice(i, 1);\n      }\n    }\n  }\n\n  clearDisplay() {\n    this.setState({\n      result: '0', \n      input: '0',\n      hasAnswer: 0,\n      hasDecimal: 0,\n    });\n  }  \n\n  //Check if the string is  numeric or not\n  checkNumber(e) {\n    return !isNaN(parseFloat(e)) && isFinite(e);\n  }\n\n  /*\n    Convert the inputted infix to postfix using Shunting Yard algorithm. \n    The postfix will then be parsed later\n  */\n  infixToPostFix(e) {\n    let equation = e;\n    let arr = [];    \n    \n    //let equation = \"3 + 5 * 6 - 2 / 4\";\n    //let equation = \"3 + 5 * 2 - 4\";\n    console.log(equation);\n    let outputQueue = \"\"; //FIFO\n    let operatorStack = []; //LIFO\n    let operators = \"^*/+-\";\n    let associativity = {\n      \"^\": \"Right\",\n      \"*\": \"Left\",\n      \"/\": \"Left\",\n      \"+\": \"Left\",\n      \"-\": \"Left\"\n    }; \n    let precedence = {\n      \"^\": 4,\n      \"*\": 3,\n      \"/\": 3,\n      \"+\": 2,\n      \"-\": 2\n    };\n    for (let i=0; i<equation.length; i++) {\n      if (operators.indexOf(equation[i]) > -1) {\n        let temp = \" \" + equation[i] + \" \";\n        arr.push(temp);\n      } else {\n        arr.push(equation[i]);\n      }\n    }\n    equation = arr.join(\"\");\n    \n    //To filter out any unwanted empty item in the array that could\n    //affect our final result\n    equation = equation.split(\" \").filter(item => item !== \"\");\n    \n    console.log(equation);\n    for (let i = 0; i < equation.length; i++) {\n      let token = equation[i];\n      //console.log(token)\n      if (this.checkNumber(token)) {\n        outputQueue += token + \" \";\n      } else if (operators.indexOf(token) !== -1) {\n        let operator1 = token;\n        let operator2 = operatorStack[operatorStack.length - 1];\n        //console.log(\"O1: \" + operator1 + \"\\t\" + \"02: \" + operator2);\n        while (operators.indexOf(operator2) !== -1 && (\n          (associativity[operator1] === \"Left\" && (precedence[operator1] <= precedence[operator2])) ||\n          (associativity[operator1] === \"Right\" && (precedence[operator1] < precedence[operator2]))\n        )) {\n          outputQueue += operator2 + \" \";\n          operatorStack.pop();\n          operator2 = operatorStack[operatorStack.length - 1];\n        }\n        operatorStack.push(operator1);\n      }\n    }\n    console.log(\"Equation pre-split: \" + equation);\n    if (operatorStack.length > 0) {\n      outputQueue += operatorStack.reverse().join(\" \");\n    }\n    console.log(\"Postfix: \" + outputQueue);\n    //console.log(operatorStack);\n    return outputQueue;\n  }\n\n  parsePostFix(e) {\n    let result =[];\n    e = e.split(\" \");\n    console.log(e);\n    for (let i = 0; i < e.length; i++) {\n      if (this.checkNumber(e[i])) {\n        result.push(e[i]);\n      } else {\n        let operand1 = result.pop();\n        let operand2 = result.pop();\n        console.log(\"a: \" + operand1);\n        console.log(\"b: \" + operand2);\n\n         if (operand2 === undefined && (e[i] === \"+\" || e[i] === \"-\")) {          \n          console.log(e[i]);\n          result.push(e[i] + parseFloat(operand1));\n        } else {\n          switch (e[i]) {\n            case \"+\":\n              result.push(parseFloat(operand1) + parseFloat(operand2));\n              break;\n            case \"-\":\n              result.push(parseFloat(operand2) - parseFloat(operand1));\n              break;\n            case \"*\":\n              result.push(parseFloat(operand1) * parseFloat(operand2));\n              break;\n            case \"/\":\n              if (operand1 === \"0\") {\n                result.push(\"Math ERROR\");\n                break;\n              }\n              result.push(parseFloat(operand2) / parseFloat(operand1));\n              break;\n            default: //Usually in case there is only a number (operand) entered            \n              result.push(parseFloat(operand1));\n          }\n        } \n      }\n    }     \n    return result.pop();\n  }\n\n  handleCalculation(e) {    \n    if (this.state.hasMinus) {\n      this.setState({\n        input: eval(this.state.input)\n      });\n    } else {\n      let postfix = this.infixToPostFix(this.state.input);\n      console.log(postfix);\n      let result = this.parsePostFix(postfix);\n      console.log(result);\n      if (isNaN(result)) {\n        this.setState({\n          \n          input: \"Math ERROR\",\n          hasAnswer: 1\n        })\n      } else {\n        this.setState({\n          input: result,\n          hasAnswer: 1,\n        });\n      } \n    }\n  }\n\n  render() {\n    return (      \n      <div className=\"main-wrapper\">\n        <link href=\"https://afeld.github.io/emoji-css/emoji.css\" rel=\"stylesheet\"></link>\n\n        <h1>JavaScript Calculator</h1>\n        \n        <div className=\"calculator\">\n          <Display\n            displayInput = {this.state.input}\n          />\n          <Buttons \n            handleInput = {this.handleInput}\n            clearDisplay = {this.clearDisplay}\n            handleCalculation = {this.handleCalculation}\n            keyDown = {this.handleKeyDown}\n            handleOperator = {this.handleOperator}\n          /> \n          <ReactFCCTest />\n        </div>\n        <footer>\n          <p>Coded and designed with <FontAwesomeIcon icon={faHeart} className=\"heart\" /> by <a href=\"https://github.com/CharaeKeow\" target=\"_blank\" rel=\"noopener noreferrer\">Charae Keow.</a></p>\n          <p>The source code is available on <a href=\"https://github.com/CharaeKeow/react-drum-machine/tree/power-button\" target=\"_blank\" rel=\"noopener noreferrer\">Github.</a></p>\n          <p>NOTE: This calculator is not completely bug-free (due to my laziness  <i class=\"em em-grimacing\"></i>) <br></br> so if you found one, <a href=\"https://twitter.com/messages/4562825420-4562825420?text=\" target=\"_blank\" rel=\"noopener noreferrer\">do tell me.</a></p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}